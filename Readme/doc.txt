/*******************************************
	*文件名  ：  仪表开发文档
	*作   者 ：  WF
	*修改时间：  2021.04.24
	*版   本：   v1.0
*******************************************/

1、硬件：
	 主控芯片：STM32F103VCT6
	 液晶屏  ：7寸电阻触摸屏
	 外部通信：CAN通信
	 存储芯片：W25Q16、SD卡

2、软件架构：
    （1）时间片轮询调度（定时器中断+任务管理器）
    （2）STemWin GUI
	（3）Fatfs文件系统
   
3、详细说明：
    （1）整个工程只有一个中断，那就是用于产生时钟节拍的定时器2中断。
	（2）RTC不产秒中断，通过轮询的方式更新时间。
	补充：后期为了CAN接收的实时性以及便利性，采取中断接收的方式。故而，整个工程有两个中断。（2021.05.10）
	
	2021.04.26调试问题总结：
	（1）#define GUI_NUMBYTES  (15*1024) ，由于没有使用外部RAM,而GUI内存空间开的过大（一开始开的是30K），导致
	在使用GUI_DrawStreamedBitmapExAuto(_Get_Data, &flp, 0, 0);函数绘制流位图时报错空间不足。
	（2）忽略了 void SDIO_IRQHandler(void)
				{
				  /* Process All SDIO Interrupt Sources */
				  SD_ProcessIRQSrc();  //SDIO中断处理函数
				}
		导致程序卡死，值得注意的是SDIO使用到了中断，所以一定要有相应的中断服务函数，否则程序会卡死。
	（3）int  GUI_DrawStreamedBitmapExAuto (GUI_GET_DATA_FUNC * pfGetData, const void * p, int x, int y)
		函数使用说明：
		GUI_GET_DATA_FUNC * pfGetData：指向获取数据调用的函数
		const void * p：如果挂载了文件系统，则为一个空的FIL*类型指针变量
		x,y就不做过多的说明。
		
	2021.05.10调试问题总结：
	（1）速度和速度条显示再同一个分段内存设备绘制时出现速度显示刷屏不连贯（刷新给人一种突兀的感觉），
	通过调试发现原因是因为绘制区域增大，内存需求增大，导致刷屏速度降低。解决方法：将速度和速度条分开显示，
	分别用一个分段内存设备绘制，效果较好。
	（2）液晶屏工艺问题：在液晶屏中心区域绘制圆形时，圆形会变成椭圆；油量显示发现30%-50%之间不是均匀变化，50%
	油量显示效果接近70%的效果。初步断定：液晶屏像素点宽度不均匀。
	
	2021.05.13调试问题总结：
	（1）无法进入CAN中断，这问题从一开始就很奇异，CAN的配置函数是通过验证没有问题的，而中断服务函数也写了，但是程序
	就是无法进入中断服务函数，纠结了很久，突然灵光一闪，发现在stm32f10x_it.c文件中没有包含bsp_can.h，因为CAN中断服务
	函数通过宏定义CAN_RX_IRQHandler实现，所以在stm32f10x_it.c文件中void CAN_RX_IRQHandler(void)并不是CAN中断服务函数
	而是一个普通函数的定义，所以无法进入CAN中断。
	
	